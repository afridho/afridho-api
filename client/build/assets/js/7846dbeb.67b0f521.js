"use strict";(self.webpackChunkclient=self.webpackChunkclient||[]).push([[323],{722:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var s=t(4848),r=t(8453);const o={sidebar_position:1,title:"Gratitude List"},a=void 0,i={id:"productivity/gratitude-list",title:"Gratitude List",description:"This api is Bear, Shortcut, and Cron connected. Every week, all the gratitude list i have created will send to my device (pushover)",source:"@site/docs/productivity/gratitude-list.md",sourceDirName:"productivity",slug:"/productivity/gratitude-list",permalink:"/productivity/gratitude-list",draft:!1,unlisted:!1,editUrl:"https://github.com/afridho/afridho-api/blob/master/client/docs/productivity/gratitude-list.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Gratitude List"},sidebar:"tutorialSidebar",previous:{title:"Productivity",permalink:"/category/productivity"},next:{title:"Tools",permalink:"/category/tools"}},d={},c=[{value:"Environment",id:"environment",level:2},{value:"MongoDB Database",id:"mongodb-database",level:3},{value:"<code>GET</code> Endpoint",id:"get-endpoint",level:2},{value:"<code>POST</code> Endpoint",id:"post-endpoint",level:2},{value:"How to using",id:"how-to-using",level:2},{value:"Result",id:"result",level:3},{value:"Source Code",id:"source-code",level:2}];function l(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"This api is Bear, Shortcut, and Cron connected. Every week, all the gratitude list i have created will send to my device (pushover)"}),"\n",(0,s.jsx)(n.h2,{id:"environment",children:"Environment"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"ENV"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"PUSHOVER_KEY"})}),(0,s.jsx)(n.td,{children:"user key to access device in pushover"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"PUSHOVER_TOKEN_GRATITUDE_LIST"})}),(0,s.jsx)(n.td,{children:"pushover app token"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"GRATITUDE_LIST_PASSWORD"})}),(0,s.jsx)(n.td,{children:"password to submit message"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"GRATITUDE_LIST_NICKNAME"})}),(0,s.jsx)(n.td,{children:"nickname to message (optional)"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"mongodb-database",children:"MongoDB Database"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"ENV"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Database"})}),(0,s.jsx)(n.td,{children:"productivity"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Collection"})}),(0,s.jsx)(n.td,{children:"gratitude_list"})]})]})]}),"\n",(0,s.jsxs)(n.h2,{id:"get-endpoint",children:[(0,s.jsx)(n.code,{children:"GET"})," Endpoint"]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"To Retrieve 1 week Gratitude List"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"/api/gratitude-list\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"post-endpoint",children:[(0,s.jsx)(n.code,{children:"POST"})," Endpoint"]}),"\n",(0,s.jsx)(n.admonition,{title:"store data",type:"tip",children:(0,s.jsx)(n.p,{children:"To store data gratitude list"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'headers = { password : "password for authorization"}\n\n/api/gratitude-list\n'})}),"\n",(0,s.jsx)(n.h2,{id:"how-to-using",children:"How to using"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"message"})," : content message"]}),"\n",(0,s.jsxs)(n.li,{children:["set ",(0,s.jsx)(n.code,{children:"password"})," in header"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"result",children:"Result"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="Response Example: /api/gratitude-list"',children:'{\n  "code":200,\n  "status":"Sent",\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"source-code",children:"Source Code"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",metastring:'title="gratitude-list.js"',children:"const axios = require('axios');\nconst express = require(\"express\");\nconst router = express.Router();\nconst FormData = require('form-data');\nrequire('dotenv').config()\nconst MONGODB_USER = process.env.MONGODB_PASS\nconst MONGODB_PASS = process.env.MONGODB_PASS\nconst USER_KEY = process.env.PUSHOVER_KEY\nconst TOKEN = process.env.PUSHOVER_TOKEN_GRATITUDE_LIST\nconst GET_NICKNAME = process.env.GRATITUDE_LIST_NICKNAME ? (' '+ process.env.GRATITUDE_LIST_NICKNAME) : ''\nconst GET_PASSWORD = process.env.GRATITUDE_LIST_PASSWORD \nconst { MongoClient, ServerApiVersion } = require('mongodb');\nconst { format } = require('date-fns')\n\n\n// Connect to MongoDB\nconst uri = `mongodb://${MONGODB_USER}:${MONGODB_PASS}@ac-eymobfz-shard-00-00.dpxrwue.mongodb.net:27017,ac-eymobfz-shard-00-01.dpxrwue.mongodb.net:27017,ac-eymobfz-shard-00-02.dpxrwue.mongodb.net:27017/?ssl=true`;\nconst client = new MongoClient(uri, { useNewUrlParser: true, useUnifiedTopology: true, serverApi: ServerApiVersion.v1 });\nconst database = client.db('afridho-api');\nconst collection = database.collection('gratitude_list');\n\nconst total_days = 7 // 1 week retrieved data\nconst days_before = (new Date(new Date().setDate(new Date().getDate() - total_days)))\n\nrouter.post(\"/\", async (req, res) =>{\n    if (!req.headers['password']) {\n        res.status(401)\n        res.json({ message : \"You need password for authorization\"})   \n        res.end()\n    }else{\n    if(req.headers['password'] !== GET_PASSWORD) {\n        res.json({message : 'Password wrong. Unauthorized!'})\n        res.status(403)\n        res.end()\n    }else{\n        _data = {message : req.body.message, date : new Date() }\n        await mongo_insert(_data)\n        res.json({message : req.body.message})\n        res.status(200)\n        res.end()\n    }}\n})\n\nrouter.get(\"/\", async (req, res) =>{\n    const data = await get_data_one_week()\n    var str = ''\n    data.map(val => {\n        str = str.concat(`\u25c9 ${val.message} <small>(${format(val.date, 'eeee, HH:mm')})</small>\\n\\n`);\n    })\n    const total = data?.length\n    const content = await parse_messages_pushover(str, total)\n    await send_pushover(content)\n    \n    res.status(200)\n    res.json({message: 'Sent', code: 200})\n    res.end()\n})\n\nasync function get_data_one_week(){\n    return await collection.find({\n            date: {\n                $lt: new Date(),\n                $gte: days_before,\n            },\n        }).toArray()\n}\n\nasync function parse_messages_pushover(message, total){\n    if(total === 0) return `<h3>Very sad${GET_NICKNAME}, no gratitude this week\ud83d\ude22</h3>`\n    return `<h3>This is what are you thankful${GET_NICKNAME}\ud83d\ude0d</h3>`+message+\"<h5>Total = \"+total+\"</h5>\"\n}\n\nasync function mongo_insert(data){\n    return await collection.insertOne(data);\n}\n\nasync function get_week_number(){\n    currentDate = new Date();\n    startDate = new Date(currentDate.getFullYear(), 0, 1);\n    const days = Math.floor((currentDate - startDate) / (24 * 60 * 60 * 1000));\n    return Math.ceil(days / 7);\n}\n\n\nasync function send_pushover(message){\n    const week_number = await get_week_number()\n    const range_start = format(days_before, 'dd MMM')\n    const range_end = format(new Date(), 'dd MMM')\n\n    let fd = new FormData();\n    fd.append(\"token\", TOKEN);\n    fd.append(\"user\", USER_KEY);\n    fd.append(\"title\", `${range_start} - ${range_end}\u3018Week ${week_number}\u3019`)\n    fd.append(\"message\", message)\n    fd.append(\"html\", 1)\n\n    try{\n        return await axios({\n            method: \"POST\",\n            url: \"https://api.pushover.net/1/messages.json\",\n            data: fd,\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n        }).then(content => {});\n    }catch (error) {\n        return ({request: null, status: 0})\n    }\n}\n\n\nmodule.exports = router;\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var s=t(6540);const r={},o=s.createContext(r);function a(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);